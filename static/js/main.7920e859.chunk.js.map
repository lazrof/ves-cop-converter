{"version":3,"sources":["components/home/home.js","components/exact-converter/exact-converter.js","components/icons/home.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Home","className","class","href","to","ExactConverter","params","Form","FormGroup","Label","for","Input","type","name","id","disabled","Button","HomeIcon","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","App","path","ExchangeConver","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7920e859.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport './home.scss'\nfunction Home() {\n    \n    return(\n        <>      \n        <nav className=\"home-menu\">\n            <div class=\"btn btn-primary custom-link\">\n                <a href=\"/conversion-exacta\" class=\"text-light\">Conversi贸n Exacta</a>\n            </div>\n            <div class=\"btn btn-primary custom-link\">\n                <Link to=\"/conversion-al-cambio\" className=\"text-light\">Conversi贸n al Cambio</Link>\n            </div>\n        </nav>\n        </>\n    )\n}\n\nexport default Home;","import React from 'react'\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\n\nfunction ExactConverter(params) {\n  return (\n    <>\n      <h1>Conversi贸n Exacta</h1>\n      <Form className=\"m-3\">\n        <FormGroup className=\"my-3\">\n          <Label for=\"bolivar-value\">Valor Actual VES<br/><span className=\"small-text\">respecto al dolar estadounidense</span></Label>\n          <Input type=\"number\" name=\"number\" id=\"bolivar-value\" />\n        </FormGroup>\n        <FormGroup className=\"my-3\">\n          <Label for=\"cop-value\">D贸lares que se quieren convertir</Label>\n          <Input type=\"number\" name=\"number\" id=\"cop-value\" />\n        </FormGroup>\n        {/* <FormGroup className=\"my-3\">\n          <Label for=\"cop-value\">Tasa de cambio(COP a VES)</Label>\n          <Input type=\"number\" name=\"number\" id=\"cop-value\" />\n        </FormGroup> */}\n        <FormGroup className=\"my-3\">\n          <Label for=\"result-in-cop\">Total en COP</Label>\n          <Input type=\"number\" name=\"number\" id=\"result-in-cop\" disabled/>\n        </FormGroup>\n        <Button>Submit</Button>\n      </Form>\n    </>\n    );\n}\n\nexport default ExactConverter;","import React from 'react'\nfunction HomeIcon() {\n    return(\n        <>\n        <div className=\"home-icon\">\n            <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"home\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" class=\"svg-inline--fa fa-home fa-w-18 fa-3x\"><path fill=\"currentColor\" d=\"M280.37 148.26L96 300.11V464a16 16 0 0 0 16 16l112.06-.29a16 16 0 0 0 15.92-16V368a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v95.64a16 16 0 0 0 16 16.05L464 480a16 16 0 0 0 16-16V300L295.67 148.26a12.19 12.19 0 0 0-15.3 0zM571.6 251.47L488 182.56V44.05a12 12 0 0 0-12-12h-56a12 12 0 0 0-12 12v72.61L318.47 43a48 48 0 0 0-61 0L4.34 251.47a12 12 0 0 0-1.6 16.9l25.5 31A12 12 0 0 0 45.15 301l235.22-193.74a12.19 12.19 0 0 1 15.3 0L530.9 301a12 12 0 0 0 16.9-1.6l25.5-31a12 12 0 0 0-1.7-16.93z\" class=\"\"></path></svg>\n        </div>\n        </>\n    )\n}\n\nexport default HomeIcon;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport Home from './components/home/home';\nimport ExactConverter from './components/exact-converter/exact-converter'\nimport HomeIcon from './components/icons/home';\nimport './App.scss'; //loading bootstrap from here\n\nexport default function App() {\n  return (\n    <Router>\n       <div className=\"main-box\">\n        <nav className=\"bottom-menu\">\n            <Link to=\"/\"><HomeIcon/></Link>\n        </nav>\n\n        <Switch>\n          <Route path=\"/conversion-exacta\">\n            <ExactConverter />\n          </Route>\n          <Route path=\"/conversion-al-cambio\">\n            <ExchangeConver />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nfunction ExchangeConver() {\n  return <h2>conversion-al-cambio</h2>;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}